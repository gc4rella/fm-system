/*
* Copyright (c) 2015-2016 Fraunhofer FOKUS
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

import org.openbaton.faultmanagement.catalogue.RecoveryAction
import org.openbaton.faultmanagement.catalogue.RecoveryActionStatus
import org.openbaton.faultmanagement.core.ham.interfaces.HighAvailabilityManager;

global org.slf4j.Logger logger
global HighAvailabilityManager highAvailabilityManager

rule "Recovery action finished in vnfr"
    when
       recoveryActionEnd : RecoveryAction(status == RecoveryActionStatus.FINISHED, $vnfrId : vnfrId)
       recoveryActionActual : RecoveryAction(status == RecoveryActionStatus.IN_PROGRESS, vnfrId == $vnfrId)
    then
        logger.info("The recovery action " + recoveryActionActual.getRecoveryActionType() + " is finished in the vnf with id: "+$vnfrId);

        //highAvailabilityManager.cleanFailedInstances($vnfrId);

        delete(recoveryActionActual);
        delete(recoveryActionEnd);
end


rule "Recovery action finished in nsr"
    when
       recoveryActionEnd : RecoveryAction(status == RecoveryActionStatus.FINISHED, $nsrId : nsrId)
       recoveryActionActual : RecoveryAction(status == RecoveryActionStatus.IN_PROGRESS, nsrId == $nsrId)
    then
        logger.info("The recovery action " + recoveryActionActual.getRecoveryActionType() + " is finished in the ns with id: "+$nsrId);

        highAvailabilityManager.cleanFailedInstances($nsrId);

        delete(recoveryActionActual);
        delete(recoveryActionEnd);
end

rule "Recovery action finished"
    when
       $ra : RecoveryAction(status == RecoveryActionStatus.FINISHED)
    then
        logger.info("This recovery action is finished: " + $ra);
end

rule "Recovery action in progress"
    when
       $ra : RecoveryAction(status == RecoveryActionStatus.IN_PROGRESS)
    then
        logger.info("This recovery action is in progress: " + $ra);
end